# 1) Initialize a tuple named x with the following values: 1 2 3

x = (1, 2, 3)

print(x)
print(type(x))

# 2) Initialize a list named x with the following values: 1 2 3
x = [1, 2, 3]

print(x)
print(type(x))

# 3) Initialize a set named x with the following values: 1 2 3
x = {1, 2, 3}


print(x)
print(type(x))

# 4) Initialize a dictionary named x with the following key/value pairs: a,1 b,2 c,3

x = {'a': 1, 'b': 2, 'c': 3}

print(x)
print(type(x))

# 5a) For the following collection types, indicate if the collection is mutable.  Answer with either Y or  N
#
# Tuple
# N
#
# List
# Y
#
# Set
# Y
#
# Dictionary
# Y

# 5 b)
#
# For the following collection types, indicate if each element in the collection must be
# unique.Answer with either Y or N.
#
# Tuple
# N
#
# List
# N
#
# Set
# Y
#
# Dictionary keys
# Y

x = (1, 1, 1, 2)
print(x)
x = {1, 2, 1}
print(x)
# 6) What sequence of numbers are generated by the following range commands?:
#
# range(3)
# 0, 1, 2
#
# range(2, 4)
# 2, 3
#
# range(5, 3, -1)
# 5, 4


print([i for i in range(3)])
print([i for i in range(2,4)])
print([i for i in range(5,3,-1)])

# 7) Given that:
#
# list1 contains a list of number.
#
# Test to see if the number 42 is in list1, print the result.

list1 = [1, 2, 3, 41, 44]

if 42 in list1:
    print("Present")
else:
    print("Not present")

for ele in list1:
    if ele == 42:
        print("Element 42 present in the list")
        break
else:
    print("Element 42 not present in the list")

# 8) Given that:

# class1 is a set containing the following students: "Li", "Audry", "Jia", "Migel", "Tanya"
#
# class2 is a set containing the following students: "Sasha", "Migel", "Tanya", "Hiroto", "Audry"
#
# class3 is a set containing the following students: "Migel", "Zhang", "Hiroto", "Anita", "Jia"
#
# Create a set named x that contains all students in both class1 and class2 but not class3.

class1 = {"Li", "Audry", "Jia", "Migel", "Tanya"}
class2 = {"Sasha", "Migel", "Tanya", "Hiroto", "Audry"}
class3 = {"Migel", "Zhang", "Hiroto", "Anita", "Jia"}
# "Li", "Audry", "Jia", "Migel", "Tanya" "Sasha","Hiroto",

# x = class1.union(class2)
# print(x)
# x = class1.union(class2).intersection(class3)
# print(x)
# x = class1.union(class2).difference(class3)
# print(x)
# x = (class1 | class2) - class3
# print(x)

# x = class1.intersection(class2) - class3
x = (class1 & class2) - class3
print(x)
x = class1.intersection(class2).difference(class3)
print(x)

# 9) Write a for loop to print all the even numbers contained in the range of 2 to 20, inclusive.

x = [ num for num in range(2, 21, 2)]
print(x)

for ele in range(2, 21, 2):
    print(ele, end=' ')
print()

# 10) Write a complete function. The name of the function is priceGuide,
# it has a single input parameter called avgPrice, and it has no return.
# The function is used to determine how expensive restaurants are,
# based on their average meal price (you can assume that the price is always larger than zero).

# If the average price is $10 or less, print the message “Inexpensive”.
# If the price is more than $10 but less than or equal to $30, print the message “Moderate”.
# If the price is more than $30, print the message “Pricey”.

def priceGuide(avgPrice):
    if avgPrice <= 10:
        print("Inexpensive")
    elif 10 < avgPrice <= 30:
        print("Moderate")
    else:
        print("Pricey")


priceGuide(10)
priceGuide(15)
priceGuide(31)
