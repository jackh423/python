
Paper View
2-Numpy.ipynb

# 

# 3. array of int zeros
zeros = np.zeros(8, dtype=int)   
print(zeros)

# what data type does the array store?  
# It stores integer datatype.

# how to have the array store numpy's int?  

# Below is the example of storing the Numpy Int
other = np.array([8, 8.0], dtype=np.int_)
print(other)

# Following integer datatypes are supported by numpy
# Data type
# bool_ int_
# intc
# intp
# int8 
# int16 
# int32 
# int64 
# uint8 
# uint16 
# uint32 
# uint64

# Below is the output

[0 0 0 0 0 0 0 0]
[8 8]


# 9. array of 80 int random numbers from 10 to 19
intRandNums = np.random.randint(10, 20, 80)
print(intRandNums)
print(intRandNums.shape, '\n')

# create a 3 rows x 4 cols array of random integers from 10 to 19?
array2d = np.random.randint(10, 19, size=(3, 4))
# print the array and the shape?
print(array2d)
print(array2d.shape)

# Below is the output
[11 17 14 12 19 11 18 16 10 18 19 15 12 10 12 10 12 15 14 11 19 12 17 15
 15 11 12 11 13 13 10 18 16 13 11 15 19 11 15 12 18 12 14 10 14 19 11 19
 17 15 10 15 19 15 12 14 18 15 17 11 19 15 19 17 19 18 15 14 16 12 10 11
 19 18 13 14 15 16 17 10]
(80,) 

[[10 16 18 12]
 [16 13 13 17]
 [11 17 13 13]]
(3, 4)

# 15. boolean indexing
arr = np.array([[1,12,3,4], [15,6,7,10], [2,20,8,1]])
print(arr, '\n')
print(arr[arr<10], '\n')
print(arr[arr%2==1], '\n')

# describe what the last print statement will print for any general array?
# All odd numbers from the array. % operator is modulo operator and if we divide any odd number with 2 
# then the result will 1 and arr%2==1 will be true for all odd numbers.
# Due to this, print(arr[arr%2==1], "\n") will return all odd numbers from the array.

# Below is the output

[[ 1 12  3  4]
 [15  6  7 10]
 [ 2 20  8  1]] 

[1 3 4 6 7 2 8 1] 

[ 1  3 15  7  1] 

# 18. get the index of the sorted values
arr = np.array([5,-2,0,2,-1,-2,4])
print(np.argsort(arr))
ind = np.argsort(arr)
print(arr[ind],'\n')

arr = np.array([[2,0,-1],[1,8,3],[7,1,0]])
print(np.argsort(arr), '\n')
ind = np.argsort(arr)

# print the smallest value of each row by using arr and ind?
minInRows = np.amin(arr, axis=1)
print("smallest value of each row:", minInRows)
minInColumns = np.amin(arr, axis=0)
print("smallest value of each columns:", minInColumns)

# Find index of minimum value from 2D numpy array
result = np.where(arr == np.amin(arr))
print('Tuple of arrays returned : ', result)
print('List of coordinates of minimum value in Numpy array : ')
# zip the 2 arrays to get the exact coordinates
listOfCordinates = list(zip(result[0], result[1]))
# print(listOfCordinates)
# travese over the list of cordinates
for cord in listOfCordinates:
    print(cord)

[1 5 4 2 3 6 0]
[-2 -2 -1  0  2  4  5] 

[[2 1 0]
 [0 2 1]
 [2 1 0]] 

smallest value of each row: [-1  1  0]
smallest value of each columns: [ 1  0 -1]
Tuple of arrays returned :  (array([0]), array([2]))
List of coordinates of minimum value in Numpy array : 
[(0, 2)]
(0, 2)


# Comment

You just need to copy and paste your code into the textbox.
See solution for #28 for a shorter way to find the min of each row by using arr and ind.


